{"ast":null,"code":"import _defineProperty from\"/home/dci/Desktop/Blog/frontend/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/dci/Desktop/Blog/frontend/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/dci/Desktop/Blog/frontend/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/dci/Desktop/Blog/frontend/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import ReactQuill from\"react-quill\";import{Link,useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var axios=require(\"axios\").default;var EditPost=function EditPost(props){var _useParams=useParams(),id=_useParams.id;var _useState=useState(),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];// const inputTitleRef = useRef();\n// const inputRef = useRef();\nuseEffect(function(){var foundPost=props.edit.find(function(post){return id===post._id;});if(foundPost&&id){setTitle(foundPost.title);setContent(foundPost.content);}},[id,props.edit]);var handleBody=function handleBody(data){setContent(data);};var quillValue=function quillValue(quillContent){if(!quillContent){var foundPost=props.edit.find(function(post){return post._id===id;});if(foundPost){return foundPost.content;}}else{return quillContent;}};var updateBlogs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(title,content){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:data={title:title,content:content};try{axios.put(\"http://localhost:3001/posts/\".concat(id),data).then(function(res){props.sendGetRequest();window.location.replace(\"/mysite\");});}catch(error){console.log(error);}console.log(data);case 3:case\"end\":return _context.stop();}}},_callee);}));return function updateBlogs(_x,_x2){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"background-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"../img/image.jpg \"})}),/*#__PURE__*/_jsxs(Form,{className:\"m-5\",children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Post title\"}),/*#__PURE__*/_jsx(Form.Control,{value:title,onChange:function onChange(e){return setTitle(e.target.value);},placeholder:\"add the title\",className:\"mt-2 mb-5 title\"})]}),/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsx(\"div\",{className:\"quill\",children:/*#__PURE__*/_jsx(ReactQuill,_defineProperty({value:quillValue(content),onChange:handleBody,placeholder:\"write new post ..\",modules:EditPost.modules,formats:EditPost.formats},\"onChange\",handleBody))})}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){updateBlogs(title,content);},children:\"Save\"})]})]});};EditPost.modules={toolbar:[[{header:\"1\"},{header:\"2\"},{font:[]}],[{size:[]}],[\"bold\",\"italic\",\"underline\",\"strike\",\"blockquote\"],[{list:\"ordered\"},{list:\"bullet\"},{indent:\"-1\"},{indent:\"+1\"}],[\"link\",\"image\",\"video\"],[\"clean\"]]};EditPost.formats=[\"header\",\"font\",\"size\",\"bold\",\"italic\",\"underline\",\"strike\",\"blockquote\",\"list\",\"bullet\",\"indent\",\"link\",\"image\",\"video\"];export default EditPost;","map":{"version":3,"sources":["/home/dci/Desktop/Blog/frontend/blog/src/components/editpost.js"],"names":["React","useEffect","useRef","useState","Button","Form","ReactQuill","Link","useParams","axios","require","default","EditPost","props","id","title","setTitle","content","setContent","foundPost","edit","find","post","_id","handleBody","data","quillValue","quillContent","updateBlogs","put","then","res","sendGetRequest","window","location","replace","error","console","log","e","target","value","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useParams } from \"react-router-dom\";\nconst axios = require(\"axios\").default;\nconst EditPost = (props) => {\n  const { id } = useParams();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  // const inputTitleRef = useRef();\n  // const inputRef = useRef();\n\n  useEffect(() => {\n    const foundPost = props.edit.find((post) => id === post._id);\n    if (foundPost && id) {\n      setTitle(foundPost.title);\n      setContent(foundPost.content);\n    }\n  }, [id, props.edit]);\n\n  const handleBody = (data) => {\n    setContent(data);\n  };\n\n  const quillValue = (quillContent) => {\n    if (!quillContent) {\n      const foundPost = props.edit.find((post) => post._id === id);\n      if (foundPost) {\n        return foundPost.content;\n      }\n    } else {\n      return quillContent;\n    }\n  };\n  const updateBlogs = async (title, content) => {\n    var data = { title, content };\n    try {\n      axios.put(`http://localhost:3001/posts/${id}`, data).then((res) => {\n        props.sendGetRequest();\n        window.location.replace(\"/mysite\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(data);\n  };\n  return (\n    <div>\n      <div className=\"background-container\">\n        <img src=\"../img/image.jpg \" />\n      </div>\n      <Form className=\"m-5\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Post title</Form.Label>\n          <Form.Control\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"add the title\"\n            className=\"mt-2 mb-5 title\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <div className=\"quill\">\n            <ReactQuill\n              value={quillValue(content)}\n              onChange={handleBody}\n              placeholder=\"write new post ..\"\n              modules={EditPost.modules}\n              formats={EditPost.formats}\n              onChange={handleBody}\n            />\n          </div>\n        </Form.Group>\n        <Button\n          onClick={() => {\n            updateBlogs(title, content);\n          }}\n        >\n          Save\n        </Button>\n      </Form>\n    </div>\n  );\n};\nEditPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n\nEditPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}