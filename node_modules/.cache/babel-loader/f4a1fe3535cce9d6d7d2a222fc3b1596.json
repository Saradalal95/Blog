{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Blog/frontend/blog/src/components/addpost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst AddPost = props => {\n  _s();\n\n  const [body, setBody] = useState(\"\");\n\n  const handleBody = e => {\n    setBody(e);\n  };\n\n  const inputRef = useRef();\n\n  const addPost = async postTitle => {\n    // TODO\n    try {\n      axios.post(\"http://localhost:3002/posts/\").then(response => {\n        props.sendGetRequest(body);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addPostOnClick = async () => {\n    addPost(inputRef.current.value);\n    inputRef.current.value = \"\";\n    setBody(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Post title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"add the title\",\n          className: \"mt-2 mb-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quill\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          placeholder: \"write new post ..\",\n          modules: AddPost.modules,\n          formats: AddPost.formats,\n          onChange: handleBody,\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addPostOnClick(),\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"ytZFhXtr2bHn6Teg7PkSVU+QIGc=\");\n\n_c = AddPost;\nAddPost.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nAddPost.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/home/dci/Desktop/Blog/frontend/blog/src/components/addpost.js"],"names":["React","useRef","useState","Button","Form","ReactQuill","axios","require","default","AddPost","props","body","setBody","handleBody","e","inputRef","addPost","postTitle","post","then","response","sendGetRequest","error","console","log","addPostOnClick","current","value","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nconst axios = require(\"axios\").default;\nconst AddPost = (props) => {\n  const [body, setBody] = useState(\"\");\n  const handleBody = (e) => {\n    setBody(e);\n  };\n  const inputRef = useRef();\n\n  const addPost = async (postTitle) => {\n    // TODO\n    try {\n      axios.post(\"http://localhost:3002/posts/\").then((response) => {\n        props.sendGetRequest(body);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addPostOnClick = async () => {\n    addPost(inputRef.current.value);\n    inputRef.current.value = \"\";\n    setBody(\"\");\n  };\n\n  return (\n    <div>\n      <Form className=\"m-5\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Post title</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"add the title\"\n            className=\"mt-2 mb-5\"\n          />\n        </Form.Group>\n        <div className=\"quill\">\n          <ReactQuill\n            placeholder=\"write new post ..\"\n            modules={AddPost.modules}\n            formats={AddPost.formats}\n            onChange={handleBody}\n            value={body}\n          />\n        </div>\n\n        <Button\n          onClick={() => addPostOnClick()}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Add\n        </Button>\n      </Form>\n    </div>\n  );\n};\nAddPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nAddPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}