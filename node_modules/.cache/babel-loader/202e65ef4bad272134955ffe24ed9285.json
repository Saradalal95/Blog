{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Blog/frontend/blog/src/components/editpost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst EditPost = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const foundPost = props.editpost.find(post => id === post.id);\n\n  const handleBody = e => {\n    inputRef.current.value = e;\n  };\n\n  const inputTitleRef = useRef();\n  const inputRef = useRef();\n\n  const Edit = async (postTitle, postContent) => {\n    // TODO\n    try {\n      axios.post(\"http://localhost:3002/posts/\", {\n        title: postTitle,\n        content: postContent\n      }).then(response => {\n        props.sendGetRequest({\n          body\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addPostOnClick = async () => {\n    Edit(inputTitleRef.current.value, inputRef.current.value);\n    setBody(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Post title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          ref: inputTitleRef,\n          placeholder: \"add the title\",\n          className: \"mt-2 mb-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quill\",\n          children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n            ref: inputRef,\n            placeholder: \"write new post ..\",\n            modules: EditPost.modules,\n            formats: EditPost.formats,\n            onChange: handleBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addPostOnClick(),\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"6UcPNwpwhv784XHki2ovhM36lng=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nEditPost.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\nEditPost.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/home/dci/Desktop/Blog/frontend/blog/src/components/editpost.js"],"names":["React","useRef","useState","Button","Form","ReactQuill","Link","useParams","axios","require","default","EditPost","props","id","title","setTitle","content","setContent","foundPost","editpost","find","post","handleBody","e","inputRef","current","value","inputTitleRef","Edit","postTitle","postContent","then","response","sendGetRequest","body","error","console","log","addPostOnClick","setBody","modules","formats","toolbar","header","font","size","list","indent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,EAAtC;AACA,QAAMgB,SAAS,GAAGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAqBC,IAAD,IAAUR,EAAE,KAAKQ,IAAI,CAACR,EAA1C,CAAlB;;AACA,QAAMS,UAAU,GAAIC,CAAD,IAAO;AACxBC,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GAAyBH,CAAzB;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAG1B,MAAM,EAA5B;AACA,QAAMuB,QAAQ,GAAGvB,MAAM,EAAvB;;AAEA,QAAM2B,IAAI,GAAG,OAAOC,SAAP,EAAkBC,WAAlB,KAAkC;AAC7C;AACA,QAAI;AACFtB,MAAAA,KAAK,CACFa,IADH,CACQ,8BADR,EACwC;AACpCP,QAAAA,KAAK,EAAEe,SAD6B;AAEpCb,QAAAA,OAAO,EAAEc;AAF2B,OADxC,EAKGC,IALH,CAKSC,QAAD,IAAc;AAClBpB,QAAAA,KAAK,CAACqB,cAAN,CAAqB;AAAEC,UAAAA;AAAF,SAArB;AACD,OAPH;AAQD,KATD,CASE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAdD;;AAgBA,QAAMG,cAAc,GAAG,YAAY;AACjCV,IAAAA,IAAI,CAACD,aAAa,CAACF,OAAd,CAAsBC,KAAvB,EAA8BF,QAAQ,CAACC,OAAT,CAAiBC,KAA/C,CAAJ;AACAa,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,GAAG,EAAEZ,aADP;AAEE,UAAA,WAAW,EAAC,eAFd;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,GAAG,EAAEH,QADP;AAEE,YAAA,WAAW,EAAC,mBAFd;AAGE,YAAA,OAAO,EAAEb,QAAQ,CAAC6B,OAHpB;AAIE,YAAA,OAAO,EAAE7B,QAAQ,CAAC8B,OAJpB;AAKE,YAAA,QAAQ,EAAEnB;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAoBE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAMgB,cAAc,EAD/B;AAEE,UAAA,OAAO,EAAC,SAFV;AAGE,UAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAnED;;GAAM3B,Q;UACWJ,S;;;KADXI,Q;AAoENA,QAAQ,CAAC6B,OAAT,GAAmB;AACjBE,EAAAA,OAAO,EAAE,CACP,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAD,EAAkB;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAAlB,EAAmC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAnC,CADO,EAEP,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAFO,EAGP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHO,EAIP,CACE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADF,EAEE;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAFF,EAGE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAHF,EAIE;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAJF,CAJO,EAUP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAVO,EAWP,CAAC,OAAD,CAXO;AADQ,CAAnB;AAgBApC,QAAQ,CAAC8B,OAAT,GAAmB,CACjB,QADiB,EAEjB,MAFiB,EAGjB,MAHiB,EAIjB,MAJiB,EAKjB,QALiB,EAMjB,WANiB,EAOjB,QAPiB,EAQjB,YARiB,EASjB,MATiB,EAUjB,QAViB,EAWjB,QAXiB,EAYjB,MAZiB,EAajB,OAbiB,EAcjB,OAdiB,CAAnB;AAgBA,eAAe9B,QAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useParams } from \"react-router-dom\";\nconst axios = require(\"axios\").default;\nconst EditPost = (props) => {\n  const { id } = useParams();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const foundPost = props.editpost.find((post) => id === post.id);\n  const handleBody = (e) => {\n    inputRef.current.value = e;\n  };\n\n  const inputTitleRef = useRef();\n  const inputRef = useRef();\n\n  const Edit = async (postTitle, postContent) => {\n    // TODO\n    try {\n      axios\n        .post(\"http://localhost:3002/posts/\", {\n          title: postTitle,\n          content: postContent,\n        })\n        .then((response) => {\n          props.sendGetRequest({ body });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addPostOnClick = async () => {\n    Edit(inputTitleRef.current.value, inputRef.current.value);\n    setBody(\"\");\n  };\n\n  return (\n    <div>\n      <Form className=\"m-5\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Post title</Form.Label>\n          <Form.Control\n            ref={inputTitleRef}\n            placeholder=\"add the title\"\n            className=\"mt-2 mb-5\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <div className=\"quill\">\n            <ReactQuill\n              ref={inputRef}\n              placeholder=\"write new post ..\"\n              modules={EditPost.modules}\n              formats={EditPost.formats}\n              onChange={handleBody}\n            />\n          </div>\n        </Form.Group>\n        <Link to=\"/\">\n          <Button\n            onClick={() => addPostOnClick()}\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n};\nEditPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n\nEditPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}