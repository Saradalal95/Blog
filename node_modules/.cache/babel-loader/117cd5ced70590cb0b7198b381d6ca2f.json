{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Blog/frontend/blog/src/components/addpost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst AddPost = props => {\n  _s();\n\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  let history = useHistory();\n\n  const handleBody = e => {\n    inputRef.current.value = e;\n  };\n\n  const inputTitleRef = useRef();\n  const inputRef = useRef();\n\n  const addPost = async (postTitle, postContent) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts/\", {\n        title: postTitle,\n        content: postContent\n      });\n      await props.sendGetRequest({\n        body\n      });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const addPostOnClick = async () => {\n    try {\n      await addPost(inputTitleRef.current.value, inputRef.current.value);\n      setBody(\"\");\n      history.push(\"/mysite\");\n    } catch (error) {\n      setErrors(error.response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-post-container\",\n    children: [errors && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errors\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"There are some errors below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors[\"errors\"].map(error => Object.entries(error)).map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [element[0][0], \" - \", element[0][1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../img/image.jpg \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Post title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          ref: inputTitleRef,\n          placeholder: \"add the title\",\n          className: \"mt-2 mb-5 post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quill\",\n          children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n            ref: inputRef,\n            placeholder: \"write new post ..\",\n            modules: AddPost.modules,\n            formats: AddPost.formats,\n            onChange: handleBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-3 add-button\",\n        onClick: () => addPostOnClick(),\n        variant: \"primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"wyu2+84DlcHVQ1rzMZ0BDiH2pQA=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddPost;\nAddPost.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nAddPost.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/home/dci/Desktop/Blog/frontend/blog/src/components/addpost.js"],"names":["React","useRef","useState","Button","Form","ReactQuill","useHistory","axios","require","default","AddPost","props","body","setBody","errors","setErrors","history","handleBody","e","inputRef","current","value","inputTitleRef","addPost","postTitle","postContent","response","post","title","content","sendGetRequest","error","console","log","addPostOnClick","push","data","map","Object","entries","element","modules","formats","toolbar","header","font","size","list","indent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIc,OAAO,GAAGV,UAAU,EAAxB;;AACA,QAAMW,UAAU,GAAIC,CAAD,IAAO;AACxBC,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GAAyBH,CAAzB;AACD,GAFD;;AAGA,QAAMI,aAAa,GAAGrB,MAAM,EAA5B;AACA,QAAMkB,QAAQ,GAAGlB,MAAM,EAAvB;;AACA,QAAMsB,OAAO,GAAG,OAAOC,SAAP,EAAkBC,WAAlB,KAAkC;AAChD,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,8BAAX,EAA2C;AAChEC,QAAAA,KAAK,EAAEJ,SADyD;AAEhEK,QAAAA,OAAO,EAAEJ;AAFuD,OAA3C,CAAvB;AAIA,YAAMd,KAAK,CAACmB,cAAN,CAAqB;AAAElB,QAAAA;AAAF,OAArB,CAAN;AACD,KAND,CAME,OAAOmB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,YAAMA,KAAN;AACD;AACF,GAXD;;AAaA,QAAMG,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAMX,OAAO,CAACD,aAAa,CAACF,OAAd,CAAsBC,KAAvB,EAA8BF,QAAQ,CAACC,OAAT,CAAiBC,KAA/C,CAAb;AACAR,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,MAAAA,OAAO,CAACmB,IAAR,CAAa,SAAb;AACD,KAJD,CAIE,OAAOJ,KAAP,EAAc;AACdhB,MAAAA,SAAS,CAACgB,KAAK,CAACL,QAAN,CAAeU,IAAhB,CAAT;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,eACGtB,MAAM,iBACL;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,oBACwC;AAAA;AAAA;AAAA;AAAA,cADxC,eAEE;AAAA,kBACGA,MAAM,CAAC,QAAD,CAAN,CACEuB,GADF,CACON,KAAD,IAAWO,MAAM,CAACC,OAAP,CAAeR,KAAf,CADjB,EAEEM,GAFF,CAEOG,OAAD,iBACH;AAAA,qBACGA,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CADH,SACqBA,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHH;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAeE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF,eAmBE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,GAAG,EAAElB,aADP;AAEE,UAAA,WAAW,EAAC,eAFd;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD,CAAM,KAAN;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,GAAG,EAAEH,QADP;AAEE,YAAA,WAAW,EAAE,mBAFf;AAGE,YAAA,OAAO,EAAET,OAAO,CAAC+B,OAHnB;AAIE,YAAA,OAAO,EAAE/B,OAAO,CAACgC,OAJnB;AAKE,YAAA,QAAQ,EAAEzB;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAoBE,QAAC,MAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,OAAO,EAAE,MAAMiB,cAAc,EAF/B;AAGE,QAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAlFD;;GAAMxB,O;UAGUJ,U;;;KAHVI,O;AAmFNA,OAAO,CAAC+B,OAAR,GAAkB;AAChBE,EAAAA,OAAO,EAAE,CACP,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAD,EAAkB;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAAlB,EAAmC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAnC,CADO,EAEP,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAFO,EAGP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHO,EAIP,CACE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADF,EAEE;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAFF,EAGE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAHF,EAIE;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAJF,CAJO,EAUP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAVO,EAWP,CAAC,OAAD,CAXO;AADO,CAAlB;AAeA;AACA;AACA;AACA;;AACAtC,OAAO,CAACgC,OAAR,GAAkB,CAChB,QADgB,EAEhB,MAFgB,EAGhB,MAHgB,EAIhB,MAJgB,EAKhB,QALgB,EAMhB,WANgB,EAOhB,QAPgB,EAQhB,YARgB,EAShB,MATgB,EAUhB,QAVgB,EAWhB,QAXgB,EAYhB,MAZgB,EAahB,OAbgB,EAchB,OAdgB,CAAlB;AAgBA,eAAehC,OAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from \"react-router-dom\";\nconst axios = require(\"axios\").default;\nconst AddPost = (props) => {\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  let history = useHistory();\n  const handleBody = (e) => {\n    inputRef.current.value = e;\n  };\n  const inputTitleRef = useRef();\n  const inputRef = useRef();\n  const addPost = async (postTitle, postContent) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts/\", {\n        title: postTitle,\n        content: postContent,\n      });\n      await props.sendGetRequest({ body });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const addPostOnClick = async () => {\n    try {\n      await addPost(inputTitleRef.current.value, inputRef.current.value);\n      setBody(\"\");\n      history.push(\"/mysite\");\n    } catch (error) {\n      setErrors(error.response.data);\n    }\n  };\n\n  return (\n    <div className=\"add-post-container\">\n      {errors && (\n        <div className=\"errors\">\n          <h1>There are some errors below:</h1> <br />\n          <ul>\n            {errors[\"errors\"]\n              .map((error) => Object.entries(error))\n              .map((element) => (\n                <li>\n                  {element[0][0]} - {element[0][1]}\n                </li>\n              ))}\n          </ul>\n        </div>\n      )}\n      <div className=\"background-container\">\n        <img src=\"../img/image.jpg \" />\n      </div>\n\n      <Form className=\"m-5\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Post title</Form.Label>\n          <Form.Control\n            ref={inputTitleRef}\n            placeholder=\"add the title\"\n            className=\"mt-2 mb-5 post\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <div className=\"quill\">\n            <ReactQuill \n              ref={inputRef}\n              placeholder= \"write new post ..\"\n              modules={AddPost.modules}\n              formats={AddPost.formats}\n              onChange={handleBody}\n            />\n          </div>\n        </Form.Group>\n        <Button\n          className=\"mt-3 add-button\"\n          onClick={() => addPostOnClick()}\n          variant=\"primary\"\n        >\n          Add\n        </Button>\n      </Form>\n    </div>\n  );\n};\nAddPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nAddPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}