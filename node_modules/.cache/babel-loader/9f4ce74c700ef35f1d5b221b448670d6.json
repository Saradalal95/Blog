{"ast":null,"code":"import _regeneratorRuntime from\"/home/dci/Desktop/Blog/frontend/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/dci/Desktop/Blog/frontend/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/dci/Desktop/Blog/frontend/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import ReactQuill from\"react-quill\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var axios=require(\"axios\").default;var AddPost=function AddPost(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),body=_useState2[0],setBody=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var history=useHistory();var handleBody=function handleBody(e){inputRef.current.value=e;};var inputTitleRef=useRef();var inputRef=useRef();var addPost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(postTitle,postContent){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"http://localhost:3001/posts/\",{title:postTitle,content:postContent});case 3:response=_context.sent;_context.next=6;return props.sendGetRequest({body:body});case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);throw _context.t0;case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function addPost(_x,_x2){return _ref.apply(this,arguments);};}();var addPostOnClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return addPost(inputTitleRef.current.value,inputRef.current.value);case 3:setBody(\"\");history.push(\"/mysite\");_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);setErrors(_context2.t0.response.data);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function addPostOnClick(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"add-post-container\",children:[errors&&/*#__PURE__*/_jsxs(\"div\",{className:\"errors\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"There are some errors below:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"ul\",{children:errors[\"errors\"].map(function(error){return Object.entries(error);}).map(function(element){return/*#__PURE__*/_jsxs(\"li\",{children:[element[0][0],\" - \",element[0][1]]});})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"background-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"../img/image.jpg \"})}),/*#__PURE__*/_jsxs(Form,{className:\"m-5\",children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Post title\"}),/*#__PURE__*/_jsx(Form.Control,{ref:inputTitleRef,placeholder:\"add the title\",className:\"mt-2 mb-5 title\"})]}),/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsx(\"div\",{className:\"quill\",children:/*#__PURE__*/_jsx(ReactQuill,{ref:inputRef,placeholder:\"write new post ..\",modules:AddPost.modules,formats:AddPost.formats,onChange:handleBody})})}),/*#__PURE__*/_jsx(Button,{className:\"mt-3 add-button\",onClick:function onClick(){return addPostOnClick();},variant:\"primary\",children:\"Add\"})]})]});};AddPost.modules={toolbar:[[{header:\"1\"},{header:\"2\"},{font:[]}],[{size:[]}],[\"bold\",\"italic\",\"underline\",\"strike\",\"blockquote\"],[{list:\"ordered\"},{list:\"bullet\"},{indent:\"-1\"},{indent:\"+1\"}],[\"link\",\"image\",\"video\"],[\"clean\"]]};/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */AddPost.formats=[\"header\",\"font\",\"size\",\"bold\",\"italic\",\"underline\",\"strike\",\"blockquote\",\"list\",\"bullet\",\"indent\",\"link\",\"image\",\"video\"];export default AddPost;","map":{"version":3,"sources":["/home/dci/Desktop/Blog/frontend/blog/src/components/addpost.js"],"names":["React","useRef","useState","Button","Form","ReactQuill","useHistory","axios","require","default","AddPost","props","body","setBody","errors","setErrors","history","handleBody","e","inputRef","current","value","inputTitleRef","addPost","postTitle","postContent","post","title","content","response","sendGetRequest","console","log","addPostOnClick","push","data","map","error","Object","entries","element","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"8cAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,iBAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFACA,GAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,cAAwBT,QAAQ,CAAC,EAAD,CAAhC,wCAAOU,IAAP,eAAaC,OAAb,eACA,eAA4BX,QAAQ,CAAC,EAAD,CAApC,yCAAOY,MAAP,eAAeC,SAAf,eACA,GAAIC,CAAAA,OAAO,CAAGV,UAAU,EAAxB,CACA,GAAMW,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAO,CACxBC,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,CAAyBH,CAAzB,CACD,CAFD,CAGA,GAAMI,CAAAA,aAAa,CAAGrB,MAAM,EAA5B,CACA,GAAMkB,CAAAA,QAAQ,CAAGlB,MAAM,EAAvB,CACA,GAAMsB,CAAAA,OAAO,0FAAG,iBAAOC,SAAP,CAAkBC,WAAlB,qKAEWlB,CAAAA,KAAK,CAACmB,IAAN,CAAW,8BAAX,CAA2C,CAChEC,KAAK,CAAEH,SADyD,CAEhEI,OAAO,CAAEH,WAFuD,CAA3C,CAFX,QAENI,QAFM,qCAMNlB,CAAAA,KAAK,CAACmB,cAAN,CAAqB,CAAElB,IAAI,CAAJA,IAAF,CAArB,CANM,uFAQZmB,OAAO,CAACC,GAAR,cARY,sFAAH,kBAAPT,CAAAA,OAAO,gDAAb,CAaA,GAAMU,CAAAA,cAAc,2FAAG,gLAEbV,CAAAA,OAAO,CAACD,aAAa,CAACF,OAAd,CAAsBC,KAAvB,CAA8BF,QAAQ,CAACC,OAAT,CAAiBC,KAA/C,CAFM,QAGnBR,OAAO,CAAC,EAAD,CAAP,CACAG,OAAO,CAACkB,IAAR,CAAa,SAAb,EAJmB,mFAMnBnB,SAAS,CAAC,aAAMc,QAAN,CAAeM,IAAhB,CAAT,CANmB,sEAAH,kBAAdF,CAAAA,cAAc,2CAApB,CAUA,mBACE,aAAK,SAAS,CAAC,oBAAf,WACGnB,MAAM,eACL,aAAK,SAAS,CAAC,QAAf,wBACE,oDADF,kBACwC,aADxC,cAEE,oBACGA,MAAM,CAAC,QAAD,CAAN,CACEsB,GADF,CACM,SAACC,KAAD,QAAWC,CAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,CAAX,EADN,EAEED,GAFF,CAEM,SAACI,OAAD,qBACH,sBACGA,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CADH,OACqBA,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CADrB,GADG,EAFN,CADH,EAFF,GAFJ,cAeE,YAAK,SAAS,CAAC,sBAAf,uBACE,YAAK,GAAG,CAAC,mBAAT,EADF,EAfF,cAmBE,MAAC,IAAD,EAAM,SAAS,CAAC,KAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,yBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,GAAG,CAAElB,aADP,CAEE,WAAW,CAAC,eAFd,CAGE,SAAS,CAAC,iBAHZ,EAFF,GADF,cASE,KAAC,IAAD,CAAM,KAAN,wBACE,YAAK,SAAS,CAAC,OAAf,uBACE,KAAC,UAAD,EACE,GAAG,CAAEH,QADP,CAEE,WAAW,CAAE,mBAFf,CAGE,OAAO,CAAET,OAAO,CAAC+B,OAHnB,CAIE,OAAO,CAAE/B,OAAO,CAACgC,OAJnB,CAKE,QAAQ,CAAEzB,UALZ,EADF,EADF,EATF,cAoBE,KAAC,MAAD,EACE,SAAS,CAAC,iBADZ,CAEE,OAAO,CAAE,yBAAMgB,CAAAA,cAAc,EAApB,EAFX,CAGE,OAAO,CAAC,SAHV,iBApBF,GAnBF,GADF,CAkDD,CAlFD,CAmFAvB,OAAO,CAAC+B,OAAR,CAAkB,CAChBE,OAAO,CAAE,CACP,CAAC,CAAEC,MAAM,CAAE,GAAV,CAAD,CAAkB,CAAEA,MAAM,CAAE,GAAV,CAAlB,CAAmC,CAAEC,IAAI,CAAE,EAAR,CAAnC,CADO,CAEP,CAAC,CAAEC,IAAI,CAAE,EAAR,CAAD,CAFO,CAGP,CAAC,MAAD,CAAS,QAAT,CAAmB,WAAnB,CAAgC,QAAhC,CAA0C,YAA1C,CAHO,CAIP,CACE,CAAEC,IAAI,CAAE,SAAR,CADF,CAEE,CAAEA,IAAI,CAAE,QAAR,CAFF,CAGE,CAAEC,MAAM,CAAE,IAAV,CAHF,CAIE,CAAEA,MAAM,CAAE,IAAV,CAJF,CAJO,CAUP,CAAC,MAAD,CAAS,OAAT,CAAkB,OAAlB,CAVO,CAWP,CAAC,OAAD,CAXO,CADO,CAAlB,CAeA;AACA;AACA;AACA,GACAtC,OAAO,CAACgC,OAAR,CAAkB,CAChB,QADgB,CAEhB,MAFgB,CAGhB,MAHgB,CAIhB,MAJgB,CAKhB,QALgB,CAMhB,WANgB,CAOhB,QAPgB,CAQhB,YARgB,CAShB,MATgB,CAUhB,QAVgB,CAWhB,QAXgB,CAYhB,MAZgB,CAahB,OAbgB,CAchB,OAdgB,CAAlB,CAgBA,cAAehC,CAAAA,OAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from \"react-router-dom\";\nconst axios = require(\"axios\").default;\nconst AddPost = (props) => {\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  let history = useHistory();\n  const handleBody = (e) => {\n    inputRef.current.value = e;\n  };\n  const inputTitleRef = useRef();\n  const inputRef = useRef();\n  const addPost = async (postTitle, postContent) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts/\", {\n        title: postTitle,\n        content: postContent,\n      });\n      await props.sendGetRequest({ body });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const addPostOnClick = async () => {\n    try {\n      await addPost(inputTitleRef.current.value, inputRef.current.value);\n      setBody(\"\");\n      history.push(\"/mysite\");\n    } catch (error) {\n      setErrors(error.response.data);\n    }\n  };\n\n  return (\n    <div className=\"add-post-container\">\n      {errors && (\n        <div className=\"errors\">\n          <h1>There are some errors below:</h1> <br />\n          <ul>\n            {errors[\"errors\"]\n              .map((error) => Object.entries(error))\n              .map((element) => (\n                <li>\n                  {element[0][0]} - {element[0][1]}\n                </li>\n              ))}\n          </ul>\n        </div>\n      )}\n      <div className=\"background-container\">\n        <img src=\"../img/image.jpg \" />\n      </div>\n\n      <Form className=\"m-5\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Post title</Form.Label>\n          <Form.Control\n            ref={inputTitleRef}\n            placeholder=\"add the title\"\n            className=\"mt-2 mb-5 title\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <div className=\"quill\">\n            <ReactQuill \n              ref={inputRef}\n              placeholder= \"write new post ..\"\n              modules={AddPost.modules}\n              formats={AddPost.formats}\n              onChange={handleBody}\n            />\n          </div>\n        </Form.Group>\n        <Button\n          className=\"mt-3 add-button\"\n          onClick={() => addPostOnClick()}\n          variant=\"primary\"\n        >\n          Add\n        </Button>\n      </Form>\n    </div>\n  );\n};\nAddPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nAddPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}