[{"/home/dci/Desktop/my Blog/frontend/src/index.js":"1","/home/dci/Desktop/my Blog/frontend/src/baseurl.js":"2","/home/dci/Desktop/my Blog/frontend/src/components/header.js":"3","/home/dci/Desktop/my Blog/frontend/src/components/addpost.js":"4","/home/dci/Desktop/my Blog/frontend/src/components/home.js":"5","/home/dci/Desktop/my Blog/frontend/src/components/post.js":"6","/home/dci/Desktop/my Blog/frontend/src/components/editpost.js":"7","/home/dci/Desktop/my Blog/frontend/src/components/mysite.js":"8","/home/dci/Desktop/my Blog/frontend/src/components/footer.js":"9"},{"size":1752,"mtime":1626126144911,"results":"10","hashOfConfig":"11"},{"size":152,"mtime":1625226735863,"results":"12","hashOfConfig":"11"},{"size":7506,"mtime":1626026970096,"results":"13","hashOfConfig":"11"},{"size":3791,"mtime":1629314345630,"results":"14","hashOfConfig":"11"},{"size":1349,"mtime":1626126071736,"results":"15","hashOfConfig":"11"},{"size":2466,"mtime":1629315310116,"results":"16","hashOfConfig":"11"},{"size":3027,"mtime":1629314326235,"results":"17","hashOfConfig":"11"},{"size":1855,"mtime":1629314269684,"results":"18","hashOfConfig":"11"},{"size":866,"mtime":1626126077288,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1092l79",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/dci/Desktop/my Blog/frontend/src/index.js",[],["44","45"],"/home/dci/Desktop/my Blog/frontend/src/baseurl.js",[],"/home/dci/Desktop/my Blog/frontend/src/components/header.js",["46","47"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Dropdown, DropdownButton, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport baseUrl from \"../baseurl\";\nconst Header = () => {\n  const [signin, setSignin] = useState(false);\n  const [signup, setSignup] = useState(false);\n  const handleCloseSignin = () => setSignin(false);\n  const handleShowSignin = () => setSignin(true);\n  const handleCloseSignup = () => setSignup(false);\n  const handleShowSignup = () => setSignup(true);\n  const [userSignup, setUserSignup] = useState({});\n  const [userSignin, setUserSignin] = useState({});\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const myStorage = window.localStorage;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  console.log(\"user\", user);\n\n  console.log(userSignup);\n\n  const handleChangeSignup = (evt) => {\n    setUserSignup({\n      ...userSignup,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n  const handleChangeSignin = (evt) => {\n    setUserSignin({\n      ...userSignin,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n  const submitSignup = async () => {\n    try {\n      const response = await axios.post(baseUrl + \"/users\", userSignup);\n      console.log(\"response\", response);\n      myStorage.setItem(\"token\", response.data);\n      window.location.replace(\"/\");\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const submitSignin = async () => {\n    try {\n      const response = await axios.post(baseUrl + \"/users/login\", {\n        email: userSignin.email,\n        password: userSignin.password,\n      });\n      myStorage.setItem(\"token\", response.data.token);\n      myStorage.setItem(\"user\", JSON.stringify(response.data));\n\n      window.location.replace(\"/\");\n      console.log(userSignin);\n    } catch (error) {\n      if (!localStorage.getItem(\"token\")) {\n        alert(\"wrong email or password please try again\");\n      }\n      console.log(error.response);\n    }\n  };\n  const signOutOnClick = () => {\n    localStorage.removeItem(\"token\");\n    window.location.replace(\"/\");\n  };\n\n  return (\n    <div className=\"header-main-container\">\n      <ul className=\"header-container\">\n        <li className=\"list-item\">\n          <Link to=\"/\" className=\"header-item\">\n            Home /\n          </Link>\n        </li>\n        <li className=\"list-item\">\n          <Link to=\"/mysite\" className=\"header-item\">\n            MySite /\n          </Link>\n        </li>\n        <li className=\"list-item\">\n          <Link to=\"/addpost\" className=\"header-item\">\n            NewPost /\n          </Link>\n        </li>\n      </ul>\n      {localStorage.getItem(\"token\") ? (\n        <DropdownButton\n          id=\"dropdown-item-button\"\n          title={user.name}\n          variant=\"dark\"\n          className=\"startBtn\"\n        >\n          {/* <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText> */}\n          <div className=\"startNow-container\">\n            <Button className=\"signInBtn\" onClick={signOutOnClick}>\n              sign out\n            </Button>\n          </div>\n        </DropdownButton>\n      ) : (\n        <DropdownButton\n          id=\"dropdown-item-button\"\n          title=\"start now\"\n          variant=\"dark\"\n          className=\"startBtn\"\n        >\n          {/* <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText> */}\n          <div className=\"startNow-container\">\n            <Button className=\"signInBtn\" onClick={handleShowSignin}>\n              sign in\n            </Button>\n            <Button className=\"signInBtn\" onClick={handleShowSignup}>\n              sign up\n            </Button>\n          </div>\n        </DropdownButton>\n      )}\n\n      {/* <div className=\"button-container\">\n        <Button className=\"signInBtn\" onClick={handleShowSignin}>\n          sign in\n        </Button>\n        <Button className=\"signInBtn\" onClick={handleShowSignup}>\n          sign up\n        </Button>\n        <Button className=\"signInBtn\" onClick={signOutOnClick}>\n          sign out\n        </Button>\n      </div> */}\n      <Modal\n        show={signup}\n        onHide={handleCloseSignup}\n        backdrop=\"static\"\n        keyboard={false}\n        animation={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"modalTitle\">Sign up</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <label htmlFor=\"name\" className=\"labelClass\">\n            Name:\n          </label>\n          <input\n            className=\"inputClass\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"enter your name\"\n            onChange={handleChangeSignup}\n          />\n          <label htmlFor=\"email\" className=\"labelClass\">\n            Email:\n          </label>\n          <input\n            className=\"inputClass\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"enter your email\"\n            onChange={handleChangeSignup}\n          />\n          <br />\n          <label htmlFor=\"password\" className=\"labelClass\">\n            Password:\n          </label>\n          <input\n            type={passwordShown ? \"text\" : \"password\"}\n            onChange={handleChangeSignup}\n            className=\"inputClass\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"enter your password\"\n          />\n          <br />\n          <label htmlFor=\"password\" className=\"labelClass\">\n            Confirm Password:\n          </label>\n          <input\n            type={passwordShown ? \"text\" : \"password\"}\n            name=\"confirmPassword\"\n            id=\"password\"\n            className=\"inputClass\"\n            placeholder=\"confirm password\"\n            onChange={handleChangeSignup}\n          />\n\n          <Button className=\"mt-5 modalButton\" onClick={submitSignup}>\n            Sign up\n          </Button>\n        </Modal.Body>\n        <Modal.Footer>\n          <p className=\"modalP\">Already have an account?</p>\n          <Button\n            className=\"modalButton\"\n            variant=\"primary\"\n            onClick={handleShowSignup}\n          >\n            Sign in here\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={signin}\n        onHide={handleCloseSignin}\n        backdrop=\"static\"\n        keyboard={false}\n        animation={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"modalTitle mb-4\">Sign In</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"modalBody\">\n          <label htmlFor=\"email\" className=\"labelClass\">\n            Email:\n          </label>\n          <input\n            onChange={handleChangeSignin}\n            className=\"inputClass\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"enter your email\"\n          />\n          <br />\n          <label htmlFor=\"password\" className=\"labelClass\">\n            Password:\n          </label>\n          <input\n            type={passwordShown ? \"text\" : \"password\"}\n            onChange={handleChangeSignin}\n            className=\"inputClass\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"enter your password\"\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={submitSignin}\n            variant=\"primary\"\n            className=\"modalButtonSignIn\"\n            style={{ marginRight: \"auto\" }}\n          >\n            Sign In\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Header;\n","/home/dci/Desktop/my Blog/frontend/src/components/addpost.js",[],"/home/dci/Desktop/my Blog/frontend/src/components/home.js",["48","49"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1 className=\"welcome-header\">\n        Welcome to My Blog\n        <img src=\"../img/logo.png\" alt=\"logo\" className=\"logo\" />\n      </h1>\n      {/* \n      <form style={{ textAlign: \"center\" }}>\n        <p>Enter your name : </p>\n        <input\n          type=\"text\"\n          onChange={(event) => localStorage.setItem(\"user.name\", event.target.value)}\n        ></input>\n      </form> */}\n      <div className=\"home-container\">\n        <div className=\"illustrations-container\">\n          <img src=\"../img/02.png\" />\n          <div class=\"overlay\">\n            <div class=\"text\">\n              <Link to=\"/addpost\" className=\"overlay-text\">\n                Share your thoughts\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"illustrations-container\">\n          <img src=\"../img/2.png\" />\n          <div class=\"overlay\">\n            <div class=\"text\">\n              <Link to=\"/mysite\" className=\"overlay-text\">\n                browse all posts\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <h6 className=\"footer\">\n        Welcome to My Blog {localStorage.getItem(\"user.name\")}\n      </h6> */}\n    \n    </div>\n  );\n};\n\nexport default Home;\n","/home/dci/Desktop/my Blog/frontend/src/components/post.js",["50"],"import React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport baseUrl from \"../baseurl\";\nconst axios = require(\"axios\").default;\n\nconst Post = (props) => {\n  const { id } = useParams();\n  const foundPost = props.showPost.find((post) => id === post._id);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  // const deletePostOnClick = async (id) => {\n  //   try {\n  //     axios\n  //       .delete(`http://localhost:3001/posts/${id}`, {\n  //         data: { id: id },\n  //       })\n  //       .then((response) => props.sendGetRequest());\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n\n  //   console.log(id);\n  // };\n  const deletePostOnClick = async (id) => {\n    try {\n      axios\n        .delete(`${baseUrl}/posts/${id}`, {\n          headers: {\n            auth: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          props.sendGetRequest();\n          response.data === \"notauth\"\n            ? alert(\"Not authorize to delete others post\")\n            : window.location.replace(\"/mysite\");\n        });\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(id);\n  };\n  const checkUser = () => {\n    if (foundPost.userId.name !== user.name) {\n      alert(\"you can not update this post it belongs to someone else\");\n    } else {\n      window.location.replace(`/editpost/${foundPost._id}`);\n    }\n  };\n  return (\n    <div className=\"post-main-container \">\n      <div className=\"background-mysite\">\n        {/* <img src=\"../img/bg.jpg\" /> */}\n      </div>\n      {foundPost ? (\n        <Card style={{ width: \"35rem\" }} className=\"p-4\">\n          <Card.Body className=\"m-auto\">\n            <Card.Title style={{ fontSize: \"1.5rem\" }}>\n              {foundPost.title}\n            </Card.Title>\n            <Card.Text\n              className=\"post-content\"\n              dangerouslySetInnerHTML={{ __html: foundPost.content }}\n            ></Card.Text>\n          </Card.Body>\n          <span className=\"button-container\">\n            <Button\n              className=\"button\"\n              onClick={() => {\n                deletePostOnClick(foundPost._id);\n              }}\n            >\n              delete\n            </Button>\n            <Button onClick={checkUser} className=\"button\">\n              Edit\n            </Button>\n          </span>\n        </Card>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;\n","/home/dci/Desktop/my Blog/frontend/src/components/editpost.js",["51","52","53"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useParams } from \"react-router-dom\";\nimport baseUrl from \"../baseurl\";\nconst axios = require(\"axios\").default;\nconst EditPost = (props) => {\n  const { id } = useParams();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  // const inputTitleRef = useRef();\n  // const inputRef = useRef();\n\n  useEffect(() => {\n    const foundPost = props.edit.find((post) => id === post._id);\n    if (foundPost && id) {\n      setTitle(foundPost.title);\n      setContent(foundPost.content);\n    }\n  }, [id, props.edit]);\n\n  const handleBody = (data) => {\n    setContent(data);\n  };\n\n  const quillValue = (quillContent) => {\n    if (!quillContent) {\n      const foundPost = props.edit.find((post) => post._id === id);\n      if (foundPost) {\n        return foundPost.content;\n      }\n    } else {\n      return quillContent;\n    }\n  };\n  const updateBlogs = async (title, content) => {\n    var data = { title, content };\n    try {\n      axios\n        .put(baseUrl + `/posts/${id}`, data, {\n          headers: {\n            auth: localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          props.sendGetRequest();\n          window.location.replace(\"/mysite\");\n        });\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(data);\n  };\n  return (\n    <div>\n      <div className=\"background-post\">\n        {/* <img src=\"../img/image.jpg \" /> */}\n      </div>\n      <Form className=\"m-5\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Post title</Form.Label>\n          <Form.Control\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"add the title\"\n            className=\"mt-2 mb-5 title\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <div className=\"quill\">\n            <ReactQuill\n              value={quillValue(content)}\n              onChange={handleBody}\n              placeholder=\"write new post ..\"\n              modules={EditPost.modules}\n              formats={EditPost.formats}\n              onChange={handleBody}\n            />\n          </div>\n        </Form.Group>\n        <Button\n          onClick={() => {\n            updateBlogs(title, content);\n          }}\n        >\n          Save\n        </Button>\n      </Form>\n    </div>\n  );\n};\nEditPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n\nEditPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\nexport default EditPost;\n","/home/dci/Desktop/my Blog/frontend/src/components/mysite.js",["54","55"],"import React from \"react\";\nimport \"../css/style.css\";\nimport { Link } from \"react-router-dom\";\nimport baseUrl from \"../baseurl\";\nconst axios = require(\"axios\").default;\nconst MySite = (props) => {\n  // const deletePostOnClick = async (id) => {\n  //   try {\n  //     axios\n  //       .delete(`${baseUrl}/posts/${id}`, {\n  //         headers: {\n  //           auth: localStorage.getItem(\"token\"),\n  //         },\n  //       })\n  //       .then((response) => {\n  //         props.sendGetRequest();\n  //         response.data === \"notauth\"\n  //           ? alert(\n  //               \"you can only delete your posts! this post was published by someone else\"\n  //             )\n  //           : window.location.replace(\"/mysite\");\n  //       });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   console.log(id);\n  // };\n\n  return (\n    <div className=\"post-collection-container\">\n      <div className=\"background-mysite\">\n      </div>\n      <h2 className=\"posts-header\">posts Collection</h2>\n      {props.show.length < 1 ? (\n        <p style={{ textAlign: \"center\", fontSize: \"1.3rem\" }}>\n          There is no post yet\n        </p>\n      ) : (\n        props.show.map((post, index) => (\n          <ul key={index} className=\"posts-list\">\n            {/* <span\n              className=\"close-x\"\n              // onClick={() => {\n              //   deletePostOnClick(post._id);\n              // }}\n            >\n              x\n            </span> */}\n            <Link className=\"post\" to={`/post/${post._id}`}>\n              <li className=\"post-title\">\n                {post.title}\n                <p style={{ fontSize: \"1.5vw\", marginTop: \"1.8vh\" }}>\n                  posted by : {post.userId.name}\n                </p>\n              </li>\n            </Link>\n          </ul>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default MySite;\n","/home/dci/Desktop/my Blog/frontend/src/components/footer.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":18,"nodeType":"62","messageId":"63","endLine":3,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":15,"column":25,"nodeType":"62","messageId":"63","endLine":15,"endColumn":41},{"ruleId":"65","severity":1,"message":"66","line":21,"column":11,"nodeType":"67","endLine":21,"endColumn":38},{"ruleId":"65","severity":1,"message":"66","line":31,"column":11,"nodeType":"67","endLine":31,"endColumn":37},{"ruleId":"60","severity":1,"message":"68","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"60","severity":1,"message":"69","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":34},{"ruleId":"60","severity":1,"message":"68","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":77,"column":15,"nodeType":"72","messageId":"73","endLine":77,"endColumn":36},{"ruleId":"60","severity":1,"message":"74","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":15},{"ruleId":"60","severity":1,"message":"75","line":5,"column":7,"nodeType":"62","messageId":"63","endLine":5,"endColumn":12},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'setPasswordShown' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'useRef' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'baseUrl' is defined but never used.","'axios' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]